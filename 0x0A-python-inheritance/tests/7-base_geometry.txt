# 7-base_geometry.txt

========================================
UNIT TEST FOR MODULE 7-base_geometry.py
========================================

In this module is implemented a class 'BaseGeometry'

======
IMPORT
======

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Checking for area failure
    >>> ob = BaseGeometry()
    >>> ob.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

# Checking a lot arguments
    >>> ob.area(20)
    Traceback (most recent call last):
    TypeError: area() takes 1 positional argument but 2 were given

# integer is 0
    >>> ob.integer_validator("integer", 0)
    Traceback (most recent call last):
    ValueError: <name> must be greater than 0

# integer is < 0
    >>> ob.integer_validator("integer", -1)
    Traceback (most recent call last):
    ValueError: <name> must be greater than 0

# integer positive    
    >>> ob.integer_validator("integer", 1)

# Not integer
    >>> ob.integer_validator("bool", True)
    Traceback (most recent call last):
    TypeError: <name> must be an integer

# Not arguments
    >>> ob.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

# 3 arguments
    >>> ob.integer_validator("integer", 10, 5)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given
