# 101-lazy_matrix_mul.txt

===========================================
UNIT TEST FOR MODULE 101-lazy_matrix_mul.py
===========================================

In this module is implemented a function to implement mul between matrix ``lazy_matrix_mul(m_a, m_b)``

=============
HOW TO USE IT
=============

``lazy_matrix_mul(...)`` Return matrix multiplicated.

# Importing the module with the function
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

==============
# No matrix cases
==============
    
# Missing m_b
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]]))
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

# Missing m_a and m_b
    >>> print(lazy_matrix_mul())
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

================
Empty matrix cases
================

# m_a can't be Empty
    >>> print(lazy_matrix_mul([],[[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

# m_a rows can't be Empty
    >>> print(lazy_matrix_mul([[]],[[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

# m_b can't be Empty
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], []))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

# if both are empty
    >>> print(lazy_matrix_mul([], []))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

==============
Wrong size
==============

# m_a and m_b can't be multuply if num rows of a mismatch with num cols with be
    >>> print(lazy_matrix_mul([[], [], []], [[1, 2]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

# m_a and m_b can't be multuply if num rows of a mismatch with num cols with be
    >>> print(lazy_matrix_mul([[1, 2]], [[], [], []]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

=============
Wrong Types
=============

# m_a wrong Type
    >>> print(lazy_matrix_mul([[1, "2"]], [[1],[2]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

# m_b wrong Type
    >>> print(lazy_matrix_mul([[1, 2]], [["1"],[2]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

==============
Wrong size
==============

# Wrong size of m_a
    >>> print(lazy_matrix_mul([[1, 2], [1]], [[1, 2],[2, 2]]))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

# Wrong size of m_b
    >>> print(lazy_matrix_mul([[1, 2]], [[1, 2],[2]]))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

==================
They are not lists
==================

# m_b is not a list
    >>> print(lazy_matrix_mul([[1, 2], [1]], "55"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

